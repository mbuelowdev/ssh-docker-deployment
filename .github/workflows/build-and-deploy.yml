name: Build and deploy

on:
  workflow_call:
    inputs:
      deployment_user:
        required: false
        type: string
        default: 'root'
      deployment_host:
        required: false
        type: string
        default: 'mbuelow.dev'
      config_path:
        required: true
        type: string
        default: './deployment.json'
      discord_channel_id:
        required: true
        type: string

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get start time
        id: statistics
        shell: bash
        run: |
          echo "time_start=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout workflow repository
        uses: actions/checkout@v3
        with:
          repository: 'mbuelowdev/ssh-docker-deployment'
          path: 'ssh-docker-deployment'
          ref: 'master'

      - name: Setup ssh key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DEPLOYMENT_MACHINE_SSH_KEY }}

      - name: Setup known_hosts
        run: echo "${{ inputs.deployment_host }} ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBKvWMd5SoHma/1T4hTUwEK174KlcHxxCk13zXBq+Y3HktjA678l/MOzJMuyEkzh06O1SEeMlYMBT4DqxFeo0QcU=" > ~/.ssh/known_hosts

      - name: Extract deployment configuration
        id: deployment_config
        run: |
          ssh-docker-deployment/scripts/extract-config.sh ${{ inputs.config_path }} >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx for exporting tarballs
        uses: docker/setup-buildx-action@v3

      - name: Build image
        id: build-image
        uses: docker/build-push-action@v6
        with:
          tags: "${{ steps.deployment_config.outputs.name }}:${{ steps.deployment_config.outputs.tag }}"
          context: .
          outputs: "type=docker,dest=${{ github.workspace }}/image.tar"

      - name: Setup deployment lock
        timeout-minutes: 5
        run: |
          ssh-docker-deployment/scripts/deployment-lock.sh lock ${{ inputs.deployment_host }} ${{ inputs.deployment_user }}

      - name: Stop existing containers
        run: |
          ssh-docker-deployment/scripts/manage-containers.sh stop ${{ inputs.config_path }} "${{ steps.deployment_config.outputs.name }}" "${{ steps.deployment_config.outputs.deployment_dir }}" ${{ inputs.deployment_host }} ${{ inputs.deployment_user }}

      - name: Prune Docker resources
        run: |
          ssh-docker-deployment/scripts/manage-containers.sh prune ${{ inputs.config_path }} "${{ steps.deployment_config.outputs.name }}" "${{ steps.deployment_config.outputs.deployment_dir }}" ${{ inputs.deployment_host }} ${{ inputs.deployment_user }}

      - name: Deploy repository
        run: |
          ssh-docker-deployment/scripts/deploy-repository.sh "${{ steps.deployment_config.outputs.deployment_dir }}" ${{ inputs.deployment_host }} ${{ inputs.deployment_user }} ${{ github.workspace }}

      - name: Load Docker image
        run: |
          ssh ${{ inputs.deployment_user }}@${{ inputs.deployment_host }} "docker load -i ${{ steps.deployment_config.outputs.deployment_dir }}/image.tar"

      - name: Start new containers
        run: |
          ssh-docker-deployment/scripts/manage-containers.sh start ${{ inputs.config_path }} "${{ steps.deployment_config.outputs.name }}" "${{ steps.deployment_config.outputs.deployment_dir }}" ${{ inputs.deployment_host }} ${{ inputs.deployment_user }}

      - name: Release deployment lock
        run: |
          ssh-docker-deployment/scripts/deployment-lock.sh release ${{ inputs.deployment_host }} ${{ inputs.deployment_user }}

      - name: Notify Discord
        if: steps.deployment_config.outputs.inform_discord == 'true'
        run: |
          APP_SIZE="$(du -k image.tar | ( read k _ && expr $k / 1024 ))"
          MINUTES="$(( ($(date +%s) - ${{ steps.statistics.outputs.time_start }} - 29) / 60))"
          ssh-docker-deployment/scripts/notify-discord.sh \
            "${{ inputs.discord_channel_id }}" \
            "${{ secrets.DISCORD_BOT_TOKEN }}" \
            "${{ github.repository }}" \
            "${{ steps.deployment_config.outputs.version }}" \
            "${{ steps.deployment_config.outputs.url }}" \
            "https://github.com/${{ github.repository }}" \
            "${{ github.event.head_commit.message }}" \
            "$MINUTES" \
            "$APP_SIZE"